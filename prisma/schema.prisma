// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  name            String
  lastName        String
  maternalSurname String?
  rut             String   @unique
  email           String   @unique
  password        String
  isActive        Boolean  @default(false)
  role            String   @default("ADMIN")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Location {
  id          String    @id @default(uuid())
  name        String
  description String?
  sections    Section[]
}

model Section {
  id          String   @id @default(uuid())
  name        String
  description String?
  locationId  String
  location    Location @relation(fields: [locationId], references: [id], onDelete: Cascade)
  items       Item[]
}

model Item {
  id        Int        @id @default(autoincrement())
  sectionId String
  type      ItemType   @default(TOOL)
  section   Section    @relation(fields: [sectionId], references: [id])
  tool      Tool?
  uniform   Uniform?
  furniture Furniture?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

enum ItemType {
  TOOL
  UNIFORM
  FURNITURE
}

model Tool {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  quantity    Int

  item Item @relation(fields: [itemId], references: [id], onDelete: Cascade)

  itemId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Uniform {
  id          Int     @id @default(autoincrement())
  code        String
  name        String
  size        String
  brand       String
  description String?
  quantity    Int
  item        Item    @relation(fields: [itemId], references: [id], onDelete: Cascade)

  itemId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Furniture {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  quantity    Int
  item        Item    @relation(fields: [itemId], references: [id], onDelete: Cascade)

  itemId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
